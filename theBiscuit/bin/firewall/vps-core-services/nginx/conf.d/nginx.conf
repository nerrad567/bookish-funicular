#
# NGINX Configuration for Secure and Efficient Web Serving
#
# This NGINX configuration file is crafted to provide a secure and efficient
# web serving experience, redirecting all HTTP traffic to HTTPS, while also integrating
# with Deluge and Filebrowser services through reverse proxy settings.
#
# Highlights:
# - Rate Limiting: Implemented to mitigate potential abuse, ensuring fair usage.
# - HTTP to HTTPS Redirect: Ensures all traffic is encrypted and secure.
# - SSL/TLS Configuration: For encrypted and secure connections.
# - Basic Authentication: Added layer of security for accessing services.
# - Reverse Proxy: Seamlessly integrates with Deluge and Filebrowser services.
#
# The configuration adheres to best practices, ensuring both security and performance
# are given paramount importance. The rate limiting ensures that the server remains
# resilient under high load, while the SSL/TLS settings ensure data integrity and privacy.
#
# Author: https://github.com/nerrad567/bookish-funicular
#
# Dependencies:
# - NGINX
# - OpenSSL (for SSL/TLS certificates)
# - Deluge (if using the proxy for Deluge)
# - Filebrowser (if using the proxy for Filebrowser)
#
# Ensure that the SSL certificates and user authentication files are correctly configured
# and accessible by NGINX. Adjust the proxy settings according to your specific service
# configurations and network setup.
#
# For any modifications or enhancements, refer to the official NGINX documentation and
# ensure to reload the NGINX configuration for changes to take effect.
#


limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/s;
error_log /var/log/nginx/error.log debug;

server {
    listen 80;

    location / {
        return 301 https://$host$request_uri;  # Redirect all HTTP to HTTPS
    }
}

server {
    listen 443 ssl;
    ssl_certificate /etc/nginx/ssl/nginx.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;
    auth_basic "BatcaveAccessOnly";
    auth_basic_user_file /etc/nginx/auth/.htpasswd;
        

    location / { 
        root /etc/nginx/www/;
        index index.html index.htm;
    }

    location /deluge {
        limit_req zone=mylimit burst=20 nodelay;
        # auth_basic "BatcaveAccessOnly";
        # auth_basic_user_file /etc/nginx/auth/.htpasswd;
        proxy_pass http://deluge:8112/;
        proxy_set_header X-Deluge-Base "/deluge/";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        add_header X-Frame-Options SAMEORIGIN;

    }

    location /filebrowser {
        limit_req zone=mylimit burst=20 nodelay;  # Rate limiting
        # auth_basic "BatcaveAccessOnly";  # Title for basic auth
        # auth_basic_user_file /etc/nginx/auth/.htpasswd;  # User file for basic auth
        proxy_pass http://filebrowser:80;  # Assuming filebrowser service name is 'filebrowser'
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }
    
}

